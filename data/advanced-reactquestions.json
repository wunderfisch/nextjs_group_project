[
  {
    "id": 1,
    "question": "What is the difference between controlled and uncontrolled components in React?",
    "answer": "Controlled components have their state controlled by React, meaning their values are set by React and updated via event handlers. Uncontrolled components manage their state internally and are updated through the DOM."
  },
  {
    "id": 2,
    "question": "How can you optimize the performance of a React application?",
    "answer": "Performance optimization techniques in React include using React.memo, useMemo, and useCallback hooks, avoiding unnecessary re-renders, and implementing lazy loading and code splitting."
  },
  {
    "id": 3,
    "question": "What is the Context API in React, and how do you use it?",
    "answer": "React Context API provides a way to pass data through the component tree without manually passing props at every level. It consists of a `Provider` and `Consumer` that allow components to subscribe to and access context data."
  },
  {
    "id": 4,
    "question": "Explain the concept of Higher-Order Components (HOCs) in React.",
    "answer": "Higher-Order Components are functions that take a component as an argument and return a new component with enhanced functionalities. They are used to share common behavior or logic between components."
  },
  {
    "id": 5,
    "question": "How do you work with React hooks like useState and useContext?",
    "answer": "`useState` is used to manage state in functional components, while `useContext` is used to access data from the nearest ancestor `Context.Provider` in the component tree."
  },
  {
    "id": 6,
    "question": "What is React Router, and how does it handle routing in a React app?",
    "answer": "React Router is a library for handling client-side routing in React applications. It uses the URL to determine which components to render and provides features like nested routes and route parameters."
  },
  {
    "id": 7,
    "question": "How can you make AJAX calls in React applications?",
    "answer": "AJAX calls in React can be made using `fetch` API, `axios`, or other HTTP libraries. The calls are typically made in lifecycle methods or using hooks like `useEffect`."
  },
  {
    "id": 8,
    "question": "Explain the concept of React virtual DOM and its benefits.",
    "answer": "The React virtual DOM is a lightweight copy of the actual DOM. React uses it to efficiently manage and perform updates, reducing direct manipulations on the actual DOM and improving rendering performance."
  },
  {
    "id": 9,
    "question": "What are React Fragments, and why are they useful?",
    "answer": "React Fragments are used to group multiple elements without adding extra nodes to the DOM. They help to avoid unnecessary wrapper elements and maintain clean and organized JSX code."
  },
  {
    "id": 10,
    "question": "How do you create reusable components in React?",
    "answer": "To create reusable components, you can define generic components with props and implement them in a way that allows customization and flexibility for different use cases."
  }
]
